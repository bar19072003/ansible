servicenow training
server side scripting
////////////////////////////////////////////////////

task 1 answer: 
(function executeRule(current, previous /*null when async*/) {

    // Add your code here

    // checking who is the user who open the most incidents
    var grInc = new GlideAggregate('incident');
    grInc.addAggregate('COUNT', 'caller_id');
    grInc.groupBy('caller_id');
    grInc.orderByAggregate('COUNT', 'caller_id', true);
    grInc.query();
    var sysID = '';
    if(grInc.next())
        {
            sysID = grInc.getDisplayValue('caller_id');
        }
        

    // checking the last group created
    var group = new GlideRecord('sys_user_group');
    group.orderByDesc('sys_created_on');
    group.query();
    var lsatGroup = '';
    if(group.next())
        {
            lsatGroup = group.sys_id;
        }

    // creating the new group
    var gr = new GlideRecord('sys_user_group');
    gr.initialize();
    gr.name = current.short_description;
    gr.parent = lsatGroup;
    gr.manager = sysID;
    gr.insert();

})(current, previous);

////////////////////////////////////////

task 2 answer: 
// Query the kb_knowledge table
var knowledgeTable = new GlideRecord('kb_knowledge');
knowledgeTable.addQuery('workflow_state', 'publushed');

// function to retrieve all records
function retrieveArticles(){
    knowledgeTable.query();
    var result='';
    while(knowledgeTable.next()){
        var title = knowledgeTable.getValue('title');
        var content = knowledgeTable.getValue('text');
        result += 'Title: ' + title + 'Content: ' + content + '\n';
// log the resalt
    }
gs.addInfoMessage(result);
}

// Calling the function
retrieveArticles();

///////////////////////////////////////

task 3 answer:

function onLoad() {
   //Type appropriate comment here, and begin script below
   if(g_form.getValue('priority') != '1' && !g_user.hasRole('admin'))
    {
        alert("You don't have permissions to read this record");
        g_form.submited = false;
        window.location = history.back();
    }

///////////////////////////////////////

task 4 answer:

script include: 

var changeIncTitle = Class.create();
changeIncTitle.prototype = {
    initialize: function() {
    },
    nameChange: function(inc){
        var myString = /3|1/.test(inc.number);
        if(myString){
            inc.short_description = "My incident number contains the digits '3' or '1'";
        }
    },

    type: 'changeIncTitle'
};

background script:

var gr = new GlideRecord('incident');
gr.query() 
var test = new changeIncTitle();
while(gr.next())
    {
        test.nameChange(gr)
    }

   